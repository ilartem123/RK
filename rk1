from os import listdir
from os.path import isfile
global notes
notes = []
myfiles = []
global notebookFileName
def tableprint(notes):
    print("{:<2} {:<16} {:<5} {:<10} {:<8} {:<6}".format('Id', 'Task', 'Time', 'Date', 'Priority', 'Status'))
    for note in notes:
        id, task, time, date, priority, status = note.values()
        print("{:<2} {:<16} {:<5} {:<10} {:<8} {:<6}".format(id, task, time, date, priority, status))
def byStatus(note):
    return note["status"]
def byTime(note):
    return note["time"]
def byDate(note):
    return note["date"]
def byId(note):
    return note["id"]
def byTask(note):
    return note["task"]
def byPriority(note):
    if (note["priority"]) == "Высокий":
        return 0
    elif (note["priority"]) == "Средний":
        return 1
    elif (note["priority"]) == "Низкий":
        return 2
    else:
        return 3
def uiFileInteraction():
    for filename in listdir("C:\\Users\\ilchenko\\PycharmProjects\\pythonProject\\notes\\"):
        if isfile("C:\\Users\\ilchenko\\PycharmProjects\\pythonProject\\notes\\"+filename) and filename[-4:] == ".txt":
            myfiles.append(filename)
    print("Список доступных блокнотов:\n")
    print(myfiles)
    print("Введите имя блокнота, с которым хотите работать:\n")
    global notebookFileName
    global notes
    notebookFileName = input()
    if not notebookFileName in myfiles:
        print("Не найден файл")
        with open("C:\\Users\\ilchenko\\PycharmProjects\\pythonProject\\notes\\" + notebookFileName, "a", encoding="Utf-8") as f:
            notes = []
    else:
        with open("C:\\Users\\ilchenko\\PycharmProjects\\pythonProject\\notes\\" + notebookFileName, "r", encoding="Utf-8") as f:
            for line in f:
                l = line.split(",")
                note = {
                "id": int(l[0]),
                "task": l[1],
                "time": l[2],
                "date": l[3],
                "priority": l[4],
                "status": l[5][:-1]
                }
                notes.append(note)
def uiNoteInteractionSort():
    print("По какому критерию отсортировать блокнот? Введите поле, для выхода введите exit")
    userAction = input()
    if userAction == "exit":
        return
    elif userAction == "id":
        notes.sort(key=byId)
        return
    elif userAction == "task":
        notes.sort(key=byTask)
        return
    elif userAction == "time":
        notes.sort(key=byTime)
        return
    elif userAction == "date":
        notes.sort(key=byDate)
        return
    elif userAction == "priority":
        notes.sort(key=byPriority)
        return
    elif userAction == "status":
        notes.sort(key=byStatus)
        return
def uiNoteInteraction():
    while True:
        print("Введите желаемое действие\n [1 - Добавить,2 - Изменить, 3 - Удалить, 0 - Выйти]:")
        action = int(input())
        if action == 1:
            print("Введите строку, разделенную запятыми:\n")
            nl = input().split(",")
            note = {
                "id": len(notes) + 1,
                "task": nl[0],
                "time": nl[1],
                "date": nl[2],
                "priority": nl[3],
                "status": nl[4]
            }
            notes.append(note)
        elif action == 2:
            print("Введите номер строки: \n")
            noteId = int(input())
            print("Введите поле и новое значение через запятую, которое хотите изменить: \n")
            noteField, fieldValue = input().split(",")
            notes[noteId - 1][noteField] = fieldValue
        elif action == 3:
            print("Введите номер строки: \n")
            noteId = int(input())
            del notes[noteId - 1]
            for note in notes:
                if note['id'] > noteId:
                    note['id'] -= 1
        elif action == 0:
            break
        else:
            print("Неизвестная команда")
def fileSaving():
    f = open("C:\\Users\\ilchenko\\PycharmProjects\\pythonProject\\notes\\"+notebookFileName, "w+", encoding="Utf-8")
    for note in notes:
        note_values = [str(note["id"]), note["task"], note["time"], note["date"], note["priority"], note["status"]]
        f.write(",".join(note_values) + "\n")
    f.close()

uiFileInteraction()
tableprint(notes)
uiNoteInteraction()
fileSaving()
tableprint(notes)\
